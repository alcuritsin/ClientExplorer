<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:ClientExplorer.Shared.ViewModels;assembly=ClientExplorer.Shared.ViewModels"

        xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
        xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"


        x:Class="ClientExplorer.AvaloniaUI.MainWindow"

        mc:Ignorable="d" d:DesignWidth="1325" d:DesignHeight="706"

        Width="1325" Height="706"

        Icon="/Assets/avalonia-logo.ico"
        Title="ClientExplorer"
        WindowStartupLocation="CenterScreen">


  <Design.DataContext>
    <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
    <vm:MainViewModel />
  </Design.DataContext>

  <!-- Главное окно -->
  <Border
    Padding="10"
    CornerRadius="5">
    <!-- <ExperimentalAcrylicBorder IsHitTestVisible="False"> -->
    <!--   <ExperimentalAcrylicBorder.Material> -->
    <!--     <ExperimentalAcrylicMaterial -->
    <!--       BackgroundSource="Digger" -->
    <!--       TintColor="Black" -->
    <!--       TintOpacity="1" -->
    <!--       MaterialOpacity="0.65" /> -->
    <!--   </ExperimentalAcrylicBorder.Material> -->
    <!-- </ExperimentalAcrylicBorder> -->

    <Grid
      x:Name="MainGrid"
      RowDefinitions="*, Auto, Auto">

      <!-- Список городов 'Popup' -->
      <Border
        Grid.Row="0"
        Grid.RowSpan="3"
        x:Name="CitiesListPopup"
        HorizontalAlignment="Left"
        VerticalAlignment="Top"
        IsVisible="{Binding  #CityName.IsFocused, Mode=OneWay}"
        Width="{Binding #CityName.Bounds.Width, Mode=OneWay}"
        MaxHeight="200"
        Opacity="0.9"
        ZIndex="1">

        <StackPanel>
          <ListBox
            x:Name="CitiesList"
            Items="{Binding CitiesFiltered}"
            SelectedItem="{Binding SelectedCity}"
            Height="{Binding $parent[Border].Height}"
            MaxHeight="{Binding $parent[Border].MaxHeight}">

            <i:Interaction.Behaviors>
              <ia:EventTriggerBehavior EventName="Tapped">
                <ia:InvokeCommandAction
                  Command="{Binding TappedOnCityItem}"
                  CommandParameter="{Binding SelectedCity}" />
              </ia:EventTriggerBehavior>
            </i:Interaction.Behaviors>

          </ListBox>
        </StackPanel>
      </Border>

      <!-- Список улиц 'Popup' -->
      <Border
        Grid.Row="0"
        Grid.RowSpan="3"
        x:Name="StreetsListPopup"
        HorizontalAlignment="Left"
        VerticalAlignment="Top"
        IsVisible="{Binding  #StreetName.IsFocused, Mode=OneWay}"
        Width="{Binding #StreetName.Bounds.Width, Mode=OneWay}"
        MaxHeight="200"
        Opacity="0.9"
        ZIndex="1">

        <StackPanel>
          <ListBox
            x:Name="StreetsList"
            Items="{Binding StreetsFiltered}"
            SelectedItem="{Binding SelectedStreet}"
            Height="{Binding $parent[Border].Height}"
            MaxHeight="{Binding $parent[Border].MaxHeight}">

            <i:Interaction.Behaviors>
              <ia:EventTriggerBehavior EventName="Tapped">
                <ia:InvokeCommandAction
                  Command="{Binding TappedOnStreetItem}"
                  CommandParameter="{Binding SelectedStreet}" />
              </ia:EventTriggerBehavior>
            </i:Interaction.Behaviors>

          </ListBox>
        </StackPanel>
      </Border>

      <!-- Список номеров домов 'Popup' -->
      <Border
        Grid.Row="0"
        Grid.RowSpan="3"
        x:Name="HouseNumbersListPopup"
        HorizontalAlignment="Left"
        VerticalAlignment="Top"
        IsVisible="{Binding  #HouseNumber.IsFocused, Mode=OneWay}"
        Width="{Binding #HouseNumber.Bounds.Width, Mode=OneWay}"
        MaxHeight="200"
        Opacity="0.9"
        ZIndex="1">

        <StackPanel>
          <ListBox
            x:Name="HouseNumbersList"
            Items="{Binding HouseNumbersFiltered}"
            SelectedItem="{Binding SelectedHouseNumber}"
            Height="{Binding $parent[Border].Height}"
            MaxHeight="{Binding $parent[Border].MaxHeight}">

            <i:Interaction.Behaviors>
              <ia:EventTriggerBehavior EventName="Tapped">
                <ia:InvokeCommandAction
                  Command="{Binding TappedOnHouseNumberItem}"
                  CommandParameter="{Binding SelectedHouseNumber}" />
              </ia:EventTriggerBehavior>
            </i:Interaction.Behaviors>

          </ListBox>
        </StackPanel>
      </Border>

      <!-- Панель - 'Основная' -->
      <Grid
        Grid.Row="0"
        RowDefinitions="Auto, *"
        ColumnDefinitions="Auto, *">

        <!-- Панель - `Клиент` -->
        <Grid
          Grid.Row="0"
          Grid.Column="0"
          Grid.ColumnSpan="2"
          RowDefinitions="Auto, Auto, *">

          <Label
            Grid.Row="0"
            x:Name="LabelClientName"
            Content="Клиент" />

          <Grid
            Grid.Row="1"
            ColumnDefinitions="*">

            <!-- Фильтр для клиентов -->
            <TextBox
              Grid.Column="0"
              x:Name="ClientFilter"
              Text="{Binding ClientFilter}">

              <i:Interaction.Behaviors>
                <ia:EventTriggerBehavior EventName="KeyUp">
                  <ia:InvokeCommandAction
                    Command="{Binding KeyUpClientName}"
                    CommandParameter="{Binding ClientFilter}" />
                </ia:EventTriggerBehavior>
                
                <ia:EventTriggerBehavior EventName="LostFocus">
                  <ia:InvokeCommandAction
                    Command="{Binding LostFocusClientName}"
                    CommandParameter="{Binding ClientFilter}" />
                </ia:EventTriggerBehavior>
              </i:Interaction.Behaviors>

            </TextBox>

            <!-- Сбросить фильтр -->
            <Button
              x:Name="ButtonClearClient"
              Content="X"
              Command="{Binding OnClickButtonCancelClient}"
              IsVisible="{Binding ClientFilter, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
              HorizontalAlignment="Right" />

          </Grid>
        </Grid>

        <!-- Панель - `Ввода объекта + Отметка папок` -->
        <StackPanel
          Grid.Row="1"
          Grid.Column="0"
          Orientation="Horizontal">

          <StackPanel>
            <!-- Группа ввода - `Объект (локация)` -->
            <Grid
              x:Name="GridLocation"
              RowDefinitions="Auto, *"
              ColumnDefinitions="Auto, *"
              Margin="0 6 6 0"
              IsVisible="{Binding ClientFilter, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">

              <!-- Title - `Объект (локация)` -->
              <Border
                Grid.Row="0" Grid.Column="0"
                ZIndex="1"
                Padding="0,0"
                Margin="6,0,0,0"
                BorderBrush="white"
                BorderThickness="1"
                CornerRadius="6"
                Background="Black">

                <Label
                  x:Name="LabelGridLocation"
                  Target="GridLocation"
                  Content="Объект (локация)" />

              </Border>

              <!-- Content - `Объект (локация)` -->
              <Border

                Grid.Row="0" Grid.Column="0"
                Grid.RowSpan="2" Grid.ColumnSpan="2"
                Margin="0,12,0,0"
                Padding="6,12,6,6"
                BorderThickness="1"
                BorderBrush="White"
                CornerRadius="6">

                <StackPanel>

                  <StackPanel IsVisible="{Binding !IsSelectedLocation}">
                    <Label
                      x:Name="LabelCityName"
                      Target="CityName"
                      Content="Населённый пункт (НП)" />

                    <Grid>

                      <TextBox
                        x:Name="CityName"
                        Text="{Binding CityName}">

                        <i:Interaction.Behaviors>

                          <ia:EventTriggerBehavior EventName="KeyUp">
                            <ia:InvokeCommandAction
                              Command="{Binding KeyUpCityName}"
                              CommandParameter="{Binding CityName}" />
                          </ia:EventTriggerBehavior>

                          <ia:EventTriggerBehavior EventName="LostFocus">
                            <ia:InvokeCommandAction
                              Command="{Binding LostFocusCityName}"
                              CommandParameter="{Binding SelectedCity}" />
                          </ia:EventTriggerBehavior>

                        </i:Interaction.Behaviors>

                      </TextBox>

                      <Button
                        x:Name="ButtonClearCityName"
                        Command="{Binding OnClickButtonClearCityName}"
                        Content="X"
                        HorizontalAlignment="Right"
                        IsVisible="{Binding CityName, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                        ZIndex="1" />

                    </Grid>
                  </StackPanel>

                  <StackPanel
                    IsVisible="{Binding !IsSelectedLocation}">

                    <StackPanel
                      IsVisible="{Binding CityName, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">

                      <Label
                        x:Name="LabelStreetName"
                        Target="StreetName"
                        Content="Улица" />


                      <Grid>
                        <TextBox
                          x:Name="StreetName"
                          Text="{Binding StreetName}">

                          <i:Interaction.Behaviors>

                            <ia:EventTriggerBehavior EventName="KeyUp">
                              <ia:InvokeCommandAction
                                Command="{Binding KeyUpStreetName}"
                                CommandParameter="{Binding StreetName}" />
                            </ia:EventTriggerBehavior>

                            <ia:EventTriggerBehavior EventName="LostFocus">
                              <ia:InvokeCommandAction
                                Command="{Binding LostFocusStreetName}"
                                CommandParameter="{Binding StreetName}" />
                            </ia:EventTriggerBehavior>

                          </i:Interaction.Behaviors>

                        </TextBox>

                        <Button
                          x:Name="ButtonClearStreetName"
                          Command="{Binding OnClickButtonClearStreetName}"
                          Content="X"
                          HorizontalAlignment="Right"
                          IsVisible="{Binding StreetName, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                          ZIndex="1" />

                      </Grid>

                    </StackPanel>

                    <StackPanel
                      IsVisible="{Binding StreetName, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">

                      <Label
                        x:Name="LabelHouseNumber"
                        Target="HouseNumber"
                        Content="Номер дома" />

                      <Grid>

                        <TextBox
                          x:Name="HouseNumber"
                          Text="{Binding HouseNumber}">

                          <i:Interaction.Behaviors>

                            <ia:EventTriggerBehavior EventName="KeyUp">
                              <ia:InvokeCommandAction
                                Command="{Binding KeyUpHouseNumber}"
                                CommandParameter="{Binding HouseNumber}" />
                            </ia:EventTriggerBehavior>

                          </i:Interaction.Behaviors>

                        </TextBox>

                        <Button
                          x:Name="ButtonClearHouseNumber"
                          Command="{Binding OnClickButtonClearHouseNumber}"
                          Content="X"
                          HorizontalAlignment="Right"
                          IsVisible="{Binding HouseNumber, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                          ZIndex="1" />

                      </Grid>
                    </StackPanel>

                  </StackPanel>

                  <StackPanel>

                    <Label
                      x:Name="LabelAdditionalInfo"
                      Target="TextBoxAdditionalInfo"
                      Content="Дополнительная информация" />

                    <Grid>
                      <TextBox
                        x:Name="TextBoxAdditionalInfo"
                        Text="{Binding AdditionalInfo}"
                        IsEnabled="{Binding !IsSelectedLocation}">

                        <i:Interaction.Behaviors>

                          <ia:EventTriggerBehavior EventName="KeyUp">
                            <ia:InvokeCommandAction
                              Command="{Binding KeyUpAdditionalInfo}"
                              CommandParameter="{Binding AdditionalInfo}" />
                          </ia:EventTriggerBehavior>

                        </i:Interaction.Behaviors>

                      </TextBox>

                      <Button
                        x:Name="ButtonClearAdditionalInfo"
                        Content="x"
                        ZIndex="1"
                        HorizontalAlignment="Right"
                        Command="{Binding OnClickButtonClearAdditionalInfo}"
                        IsVisible="{Binding AdditionalInfo, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />
                    </Grid>

                  </StackPanel>

                  <CheckBox
                    x:Name="CheckBoxLocationAsFolder"
                    Content="НП - как папка, например у МОНЕТКИ"
                    IsEnabled="False" />

                </StackPanel>

              </Border>

            </Grid>

            <!-- Группа - `Создать папки` -->
            <Grid
              RowDefinitions="Auto, *"
              ColumnDefinitions="Auto, *"
              Margin="0 6 6 0"
              IsVisible="{Binding IsLocationAvailable}">

              <!-- Заголовок группы - `Создать папки` -->
              <Border
                Grid.Row="0" Grid.Column="0"
                ZIndex="1"
                Padding="0,0"
                Margin="6,0,0,0"
                BorderBrush="white"
                BorderThickness="1"
                CornerRadius="6"
                Background="Black">

                <Label>Создать папки</Label>

              </Border>

              <!-- Контент группы - `Создать папки` -->
              <Border

                Grid.Row="0" Grid.Column="0"
                Grid.RowSpan="2" Grid.ColumnSpan="2"
                Margin="0,12,0,0"
                Padding="6,12,6,6"
                BorderThickness="1"
                BorderBrush="White"
                CornerRadius="6">

                <StackPanel>

                  <!-- Отметить папки для создания -->
                  <Grid
                    IsVisible="True"
                    RowDefinitions="*, *"
                    ColumnDefinitions="Auto, *">

                    <ListBox
                      Grid.Row="0" Grid.Column="0"
                      Grid.ColumnSpan="2"
                      Items="{Binding FoldersForCreate}"
                      Background="Transparent">
                      <ListBox.Styles>

                        <Style Selector="ListBoxItem">
                          <Setter Property="Background" Value="Transparent" />
                          <Setter Property="BorderBrush" Value="Transparent" />
                          <Setter Property="BorderThickness" Value="0" />
                          <Setter Property="Padding" Value="0 0" />
                          <Setter Property="Template">
                            <ControlTemplate>
                              <ContentPresenter
                                Name="PART_ContentPresenter"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                CornerRadius="{TemplateBinding CornerRadius}">

                              </ContentPresenter>
                            </ControlTemplate>
                          </Setter>
                        </Style>
                      </ListBox.Styles>

                      <ListBox.ItemTemplate>
                        <DataTemplate>
                          <StackPanel>
                            <CheckBox
                              Content="{Binding FolderName}"
                              IsChecked="{Binding IsCheck}"
                              IsEnabled="{Binding IsEnable}" />
                          </StackPanel>
                        </DataTemplate>
                      </ListBox.ItemTemplate>

                    </ListBox>

                    <!--TODO Добавить кнопку или чекбокс 'Все стандартные" -->

                    <CheckBox
                      Grid.Row="1" Grid.Column="0"
                      x:Name="CheckBoxFolderNameUserVersion"
                      IsChecked="{Binding FolderNameUserVersionIsCheck}"
                      IsEnabled="False" />
                    <TextBox
                      Grid.Row="1" Grid.Column="1"
                      x:Name="TextBoxFolderNameUserVersion"
                      Text="{Binding FolderNameUserVersion}">

                      <i:Interaction.Behaviors>

                        <ia:EventTriggerBehavior EventName="KeyUp">
                          <ia:InvokeCommandAction
                            Command="{Binding KeyUpFolderNameUserVersion}"
                            CommandParameter="{Binding FolderNameUserVersion}" />
                        </ia:EventTriggerBehavior>

                      </i:Interaction.Behaviors>

                    </TextBox>


                  </Grid>


                </StackPanel>
              </Border>

            </Grid>

          </StackPanel>


        </StackPanel>

        <!-- Группа - `Существующие клиенты` -->
        <Grid
          Grid.Row="1"
          Grid.Column="1"
          RowDefinitions="Auto, *"
          ColumnDefinitions="Auto, *"
          Margin="0 6 0 0"
          IsVisible="{Binding IsLocationOfClientEmpty}">
          <!-- IsVisible="{Binding IsLocationOfClientEmpty}" -->

          <!-- Заголовок группы - `Существующие клиенты` -->
          <Border
            Grid.Row="0" Grid.Column="0"
            ZIndex="1"
            Padding="0,0"
            Margin="6,0,0,0"
            BorderBrush="white"
            BorderThickness="1"
            CornerRadius="6"
            Background="Black">

            <Label>Существующие клиенты</Label>

          </Border>

          <!-- Контент группы - `Существующие клиенты` -->
          <Border
            Grid.Row="0" Grid.Column="0"
            Grid.RowSpan="2" Grid.ColumnSpan="2"
            Margin="0,12,0,0"
            Padding="6,18,6,6"
            BorderThickness="1"
            BorderBrush="White"
            CornerRadius="6">

            <Grid
              RowDefinitions="Auto, *">

              <!-- Лист клиентов -->
              <ListBox
                Grid.Row="1"
                Items="{Binding SortedClients}"
                SelectedItem="{Binding SelectedClient}">

                <i:Interaction.Behaviors>
                  <ia:EventTriggerBehavior EventName="Tapped">
                    <ia:InvokeCommandAction
                      Command="{Binding TappedClientItem}"
                      CommandParameter="{Binding SelectedClient}" />
                  </ia:EventTriggerBehavior>
                </i:Interaction.Behaviors>

                <ListBox.ItemTemplate>
                  <DataTemplate>

                    <Grid
                      ColumnDefinitions="Auto, *">

                      <Image
                        Grid.Column="0"
                        Height="50"

                        Source="{Binding Icon}"
                        Stretch="Uniform" />

                      <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Margin="6 0 0 0"
                        Text="{Binding  Name}" />

                    </Grid>

                  </DataTemplate>
                </ListBox.ItemTemplate>


              </ListBox>


            </Grid>

          </Border>

        </Grid>

        <!-- Группа - `Существующие объекты` -->
        <Grid
          Grid.Row="1"
          Grid.Column="1"
          RowDefinitions="Auto, *"
          ColumnDefinitions="Auto, *"
          Margin="0 6 0 0"
          IsVisible="{Binding !IsLocationOfClientEmpty}">
          <!-- IsVisible="{Binding !IsLocationOfClientEmpty}" -->

          <!-- Title - `Существующий объект` -->
          <Border
            Grid.Row="0" Grid.Column="0"
            ZIndex="1"
            Padding="0,0"
            Margin="6,0,0,0"
            BorderBrush="white"
            BorderThickness="1"
            CornerRadius="6">

            <Label>Существующие объекты</Label>

          </Border>

          <!-- Content - `Существующие объекты` -->
          <Border
            Grid.Row="0" Grid.Column="0"
            Grid.RowSpan="2" Grid.ColumnSpan="2"
            Margin="0,12,0,0"
            Padding="6,18,6,6"
            BorderThickness="1"
            BorderBrush="White"
            CornerRadius="6">

            <Grid
              RowDefinitions="Auto, *">

              <ListBox
                Grid.Row="1"
                x:Name="ListBoxClientObjects"
                Items="{Binding SortedLocationsOfClient}"
                SelectedItem="{Binding SelectedLocation}">

                <i:Interaction.Behaviors>
                  <ia:EventTriggerBehavior EventName="Tapped">
                    <ia:InvokeCommandAction
                      Command="{Binding TappedOnLocationClientItem}"
                      CommandParameter="{Binding SelectedLocation}" />
                  </ia:EventTriggerBehavior>
                </i:Interaction.Behaviors>

              </ListBox>

            </Grid>

          </Border>

        </Grid>

      </Grid>

      <!-- Панель - `Кнопок` -->
      <StackPanel
        Grid.Row="1"
        Orientation="Horizontal"
        HorizontalAlignment="Right">

        <Button
          x:Name="ButtonCreateDirectory"
          Content="Создать каталоги"
          Command="{Binding OnClickButtonCreateDirectory}"
          Margin="3 6"
          IsEnabled="{Binding ClientFilter, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"/>

        <Button
          x:Name="ButtonCancel"
          Content="Отмена"
          Margin="3 6" />

      </StackPanel>

      <!-- Панель - `Информации` -->
      <StackPanel
        Grid.Row="2">
        <Grid
          ColumnDefinitions="*,*, Auto">
          
        <Label
          Grid.Column="0"
          x:Name="LabelInfo"
               Content="{Binding StatusInfo}" />

        <Label
          Grid.Column="1"
          Content="{Binding LocationNameInfo}"/>
        
        <Label
          Grid.Column="2"
          Content="{Binding VersionAppInfo}"
          Margin="5 0"/>
        </Grid>

        <!-- Выделенный клиент -->
        <Border
          BorderBrush="Blue"
          BorderThickness="2"
          IsVisible="False">

          <StackPanel>
            <TextBlock
              Text="{Binding SelectedClient.Name}" />
            <TextBlock
              Text="{Binding SelectedClient.ClientPath}" />

            <!-- <Button Content="Init client folder" -->
            <!--         IsVisible="{Binding !IsInitClient}" /> -->

            <TextBlock
              Text="{Binding SelectedLocation}" />

          </StackPanel>


        </Border>
      </StackPanel>

    </Grid>
  </Border>
</Window>