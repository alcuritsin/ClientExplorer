<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:ClientExplorer.Shared.ViewModels;assembly=ClientExplorer.Shared.ViewModels"

        xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
        xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"


        x:Class="ClientExplorer.AvaloniaUI.MainWindow"

        mc:Ignorable="d" d:DesignWidth="1325" d:DesignHeight="706"

        Width="1325" Height="706"

        Icon="/Assets/avalonia-logo.ico"
        Title="ClientExplorer"
        WindowStartupLocation="CenterScreen">


  <Design.DataContext>
    <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
    <vm:MainViewModel />
  </Design.DataContext>

  <!-- Главное окно -->
  <Border
    Padding="10"
    CornerRadius="5">
    <!-- <ExperimentalAcrylicBorder IsHitTestVisible="False"> -->
    <!--   <ExperimentalAcrylicBorder.Material> -->
    <!--     <ExperimentalAcrylicMaterial -->
    <!--       BackgroundSource="Digger" -->
    <!--       TintColor="Black" -->
    <!--       TintOpacity="1" -->
    <!--       MaterialOpacity="0.65" /> -->
    <!--   </ExperimentalAcrylicBorder.Material> -->
    <!-- </ExperimentalAcrylicBorder> -->

    <Grid
      x:Name="MainGrid"
      RowDefinitions="*, Auto, Auto"
      Background="red">

      <!-- Список городов 'Popup' -->
      <Border
        x:Name="CitiesListPopup"
        Grid.RowSpan="3"
        HorizontalAlignment="Left"
        VerticalAlignment="Top"
        IsVisible="{Binding  #CityName.IsFocused, Mode=OneWay}"
        Width="{Binding #CityName.Bounds.Width, Mode=OneWay}"
        MaxHeight="200"
        Opacity="0.9"
        ZIndex="1">

        <StackPanel>
          <ListBox
            x:Name="CitiesList"
            Items="{Binding CitiesFiltered}"
            SelectedItem="{Binding SelectedCity}"
            Height="{Binding $parent[Border].Height}"
            MaxHeight="{Binding $parent[Border].MaxHeight}">

            <i:Interaction.Behaviors>
              <ia:EventTriggerBehavior EventName="Tapped">
                <ia:InvokeCommandAction
                  Command="{Binding TappedOnCityItem}"
                  CommandParameter="{Binding SelectedCity}" />
              </ia:EventTriggerBehavior>
            </i:Interaction.Behaviors>

          </ListBox>
        </StackPanel>
      </Border>

      <!-- Список улиц 'Popup' -->
      <Border
        x:Name="StreetsListPopup"
        Grid.RowSpan="3"
        HorizontalAlignment="Left"
        VerticalAlignment="Top"
        IsVisible="{Binding  #StreetName.IsFocused, Mode=OneWay}"
        Width="{Binding #StreetName.Bounds.Width, Mode=OneWay}"
        MaxHeight="200"
        Opacity="0.9"
        ZIndex="1">

        <StackPanel>
          <ListBox
            x:Name="StreetsList"
            Items="{Binding StreetsFiltered}"
            SelectedItem="{Binding SelectedStreet}"
            Height="{Binding $parent[Border].Height}"
            MaxHeight="{Binding $parent[Border].MaxHeight}">

            <i:Interaction.Behaviors>
              <ia:EventTriggerBehavior EventName="Tapped">
                <ia:InvokeCommandAction
                  Command="{Binding TappedOnStreetItem}"
                  CommandParameter="{Binding SelectedStreet}" />
              </ia:EventTriggerBehavior>
            </i:Interaction.Behaviors>

          </ListBox>
        </StackPanel>
      </Border>

      <!-- Список номеров домов 'Popup' -->
      <Border
        x:Name="HouseNumbersListPopup"
        Grid.RowSpan="3"
        HorizontalAlignment="Left"
        VerticalAlignment="Top"
        IsVisible="{Binding  #HouseNumber.IsFocused, Mode=OneWay}"
        Width="{Binding #HouseNumber.Bounds.Width, Mode=OneWay}"
        MaxHeight="200"
        Opacity="0.9"
        ZIndex="1">

        <StackPanel>
          <ListBox
            x:Name="HouseNumbersList"
            Items="{Binding HouseNumbersFiltered}"
            SelectedItem="{Binding SelectedHouseNumber}"
            Height="{Binding $parent[Border].Height}"
            MaxHeight="{Binding $parent[Border].MaxHeight}">

            <i:Interaction.Behaviors>
              <ia:EventTriggerBehavior EventName="Tapped">
                <ia:InvokeCommandAction
                  Command="{Binding TappedOnHouseNumberItem}"
                  CommandParameter="{Binding SelectedHouseNumber}" />
              </ia:EventTriggerBehavior>
            </i:Interaction.Behaviors>

          </ListBox>
        </StackPanel>
      </Border>


      <!-- Панель - 'Основная' -->
      <Grid
        Grid.Row="0"
        ColumnDefinitions="Auto, Auto">

        <!-- Панель - `Клиенты` -->
        <Grid
          Grid.Column="0"
          RowDefinitions="Auto, Auto, *"
          Margin="6">

          <Label
            Grid.Row="0"
            x:Name="LabelClientName"
            Content="Клиенты" />

          <Grid
            Grid.Row="1"
            ColumnDefinitions="*, Auto, Auto">

            <!-- Фильтр для клиентов -->
            <TextBox
              Grid.Column="0"
              x:Name="ClientFilter"
              Text="{Binding ClientFilter}"
              Margin="0 6">

              <i:Interaction.Behaviors>
                <ia:EventTriggerBehavior EventName="KeyUp">
                  <ia:InvokeCommandAction
                    Command="{Binding KeyUpClientName}"
                    CommandParameter="{Binding ClientFilter}" />
                </ia:EventTriggerBehavior>
              </i:Interaction.Behaviors>

            </TextBox>

            <!-- Сбросить фильтр -->
            <Button
              Grid.Column="1"
              Content="X" />

            <!-- Новый клиент. Создать нового клиента -->
            <Button
              Grid.Column="2"
              Content="N" />

          </Grid>

          <ListBox
            Grid.Row="2"
            Width="460"
            Items="{Binding SortedClients}"
            SelectedItem="{Binding SelectedClient}">

            <i:Interaction.Behaviors>
              <ia:EventTriggerBehavior EventName="Tapped">
                <ia:InvokeCommandAction
                  Command="{Binding OpenClient}"
                  CommandParameter="{Binding SelectedClient}" />
              </ia:EventTriggerBehavior>
            </i:Interaction.Behaviors>

            <ListBox.ItemTemplate>
              <DataTemplate>

                <Grid
                  ColumnDefinitions="Auto, *">

                  <Image
                    Grid.Column="0"
                    Height="50"

                    Source="{Binding Icon}"
                    Stretch="Uniform" />

                  <TextBlock
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Margin="6 0 0 0"
                    Text="{Binding  Name}" />

                </Grid>

              </DataTemplate>
            </ListBox.ItemTemplate>


          </ListBox>
        </Grid>

        <Grid
          Grid.Column="1"
          RowDefinitions="Auto, *">

          <!-- Выделенный клиент -->
          <Border
            Grid.Row="0"
            Height="100"
            BorderBrush="Blue"
            BorderThickness="2">

            <StackPanel>
              <TextBlock
                Text="{Binding SelectedClient.Name}" />
              <TextBlock
                Text="{Binding SelectedClient.ClientPath}" />

              <!-- <Button Content="Init client folder" -->
              <!--         IsVisible="{Binding !IsInitClient}" /> -->

              <TextBlock
                Text="{Binding SelectedLocation}" />

            </StackPanel>


          </Border>

          <Grid
            Grid.Row="1"
            ColumnDefinitions="Auto, *">

            <!-- Группа - `Существующий объект` -->
            <Grid
              Grid.Column="0"
              RowDefinitions="Auto, *"
              ColumnDefinitions="Auto, *"
              Margin="6">

              <!-- Заголовок группы - `Существующий объект` -->
              <Border
                Grid.Row="0" Grid.Column="0"
                ZIndex="1"
                Padding="0,0"
                Margin="6,0,0,0"
                BorderBrush="white"
                BorderThickness="1"
                CornerRadius="6">

                <Label>Существующий объект</Label>

              </Border>

              <!-- Контент группы - `Существующий объект` -->
              <Border
                Grid.Row="0" Grid.Column="0"
                Grid.RowSpan="2" Grid.ColumnSpan="2"
                Margin="0,12,0,0"
                Padding="6,18,6,6"
                BorderThickness="1"
                BorderBrush="White"
                CornerRadius="6">

                <Grid
                  RowDefinitions="Auto, *">

                  <!-- <Grid -->
                  <!--   Grid.Row="0" -->
                  <!--   ColumnDefinitions="*, Auto, Auto"> -->
                  <!-- -->
                  <!--   <TextBox -->
                  <!--     Grid.Column="0" /> -->
                  <!-- -->
                  <!--   <Button -->
                  <!--     Grid.Column="1" -->
                  <!--     Content="X" /> -->
                  <!-- -->
                  <!--   <Button -->
                  <!--     Grid.Column="2" -->
                  <!--     Content="N" /> -->
                  <!-- -->
                  <!-- </Grid> -->

                  <ListBox
                    Grid.Row="1"
                    Width="450"
                    x:Name="ListBoxClientObjects"
                    Items="{Binding SortedLocationsOfClient}"
                    SelectedItem="{Binding SelectedLocation}">

                    <i:Interaction.Behaviors>
                      <ia:EventTriggerBehavior EventName="Tapped">
                        <ia:InvokeCommandAction
                          Command="{Binding TappedOnLocationClientItem}"
                          CommandParameter="{Binding SelectedLocation}" />
                      </ia:EventTriggerBehavior>
                    </i:Interaction.Behaviors>


                  </ListBox>

                </Grid>

              </Border>

            </Grid>

            <!-- Панель - `Действий - настроек` -->
            <StackPanel
              Grid.Column="1"
              Orientation="Horizontal">

              <StackPanel>
                <!-- Групп - `Новый объект` -->
                <Grid
                  RowDefinitions="Auto, *"
                  ColumnDefinitions="Auto, *"
                  Margin="6">

                  <!-- Заголоквок группы - `Новый объект` -->
                  <Border
                    ZIndex="1"
                    Padding="0,0"
                    Margin="6,0,0,0"
                    BorderBrush="white"
                    BorderThickness="1"
                    CornerRadius="6">

                    <Label>Новый объект</Label>

                  </Border>

                  <!-- Контент группы - `Новый объект` -->
                  <Border

                    Grid.Row="0" Grid.Column="0"
                    Grid.RowSpan="2" Grid.ColumnSpan="2"
                    Margin="0,12,0,0"
                    Padding="6,12,6,6"
                    BorderThickness="1"
                    BorderBrush="White"
                    CornerRadius="6">

                    <StackPanel>

                      <StackPanel>
                        <Label
                          x:Name="LabelCityName"
                          Target="CityName"
                          Content="Населённый пункт (НП)" />
                        <TextBox
                          x:Name="CityName"
                          Text="{Binding CityName}">

                          <i:Interaction.Behaviors>

                            <ia:EventTriggerBehavior EventName="KeyUp">
                              <ia:InvokeCommandAction
                                Command="{Binding KeyUpCityName}"
                                CommandParameter="{Binding CityName}" />
                            </ia:EventTriggerBehavior>

                            <ia:EventTriggerBehavior EventName="LostFocus">
                              <ia:InvokeCommandAction
                                Command="{Binding LostFocusCityName}"
                                CommandParameter="{Binding SelectedCity}" />
                            </ia:EventTriggerBehavior>

                          </i:Interaction.Behaviors>

                        </TextBox>

                      </StackPanel>

                      <StackPanel>
                        <Label
                          x:Name="LabelStreetName"
                          Target="StreetName"
                          Content="Улица" />
                        <TextBox
                          x:Name="StreetName"
                          Text="{Binding StreetName}">

                          <i:Interaction.Behaviors>

                            <ia:EventTriggerBehavior EventName="KeyUp">
                              <ia:InvokeCommandAction
                                Command="{Binding KeyUpStreetName}"
                                CommandParameter="{Binding StreetName}" />
                            </ia:EventTriggerBehavior>

                            <ia:EventTriggerBehavior EventName="LostFocus">
                              <ia:InvokeCommandAction
                                Command="{Binding LostFocusStreetName}"
                                CommandParameter="{Binding StreetName}" />
                            </ia:EventTriggerBehavior>

                          </i:Interaction.Behaviors>

                        </TextBox>

                      </StackPanel>

                      <StackPanel>
                        <Label
                          x:Name="LabelHouseNumber"
                          Target="HouseNumber"
                          Content="Номер дома" />
                        <TextBox
                          x:Name="HouseNumber"
                          Text="{Binding HouseNumber}">

                          <i:Interaction.Behaviors>

                            <ia:EventTriggerBehavior EventName="KeyUp">
                              <ia:InvokeCommandAction
                                Command="{Binding KeyUpHouseNumber}"
                                CommandParameter="{Binding HouseNumber}" />
                            </ia:EventTriggerBehavior>

                          </i:Interaction.Behaviors>

                        </TextBox>

                      </StackPanel>

                      <StackPanel>
                        <Label x:Name="LabelAdditionalParam">Дополнительные параметры</Label>
                        <TextBox
                          x:Name="TextBoxAdditionalParam"
                          Text="{Binding AdditionalParam}">

                          <i:Interaction.Behaviors>

                            <ia:EventTriggerBehavior EventName="KeyUp">
                              <ia:InvokeCommandAction
                                Command="{Binding KeyUpAdditionalParam}"
                                CommandParameter="{Binding AdditionalParam}" />
                            </ia:EventTriggerBehavior>

                          </i:Interaction.Behaviors>


                        </TextBox>
                      </StackPanel>
                      <CheckBox
                        x:Name="CheckBoxLocationAsFolder"
                        Content="НП - как папка, например у МОНЕТКИ"
                        IsEnabled="False" />

                    </StackPanel>

                  </Border>

                </Grid>

                <!-- Группа - `Создать папки` -->
                <Grid
                  RowDefinitions="Auto, *"
                  ColumnDefinitions="Auto, *"
                  Margin="6">

                  <!-- Заголовок группы - `Создать папки` -->
                  <Border
                    Grid.Row="0" Grid.Column="0"
                    ZIndex="1"
                    Padding="0,0"
                    Margin="6,0,0,0"
                    BorderBrush="white"
                    BorderThickness="1"
                    CornerRadius="6">

                    <Label>Создать папки</Label>

                  </Border>

                  <!-- Контент группы - `Создать папки` -->
                  <Border

                    Grid.Row="0" Grid.Column="0"
                    Grid.RowSpan="2" Grid.ColumnSpan="2"
                    Margin="0,12,0,0"
                    Padding="6,12,6,6"
                    BorderThickness="1"
                    BorderBrush="White"
                    CornerRadius="6">

                    <StackPanel>

                      <!-- Отметить папки для создания -->
                      <Grid
                        IsVisible="True"
                        RowDefinitions="*, *"
                        ColumnDefinitions="Auto, *">

                        <ListBox
                          Grid.Row="0" Grid.Column="0"
                          Grid.ColumnSpan="2"
                          Items="{Binding FoldersForCreate}"
                          Background="Transparent">
                          <ListBox.Styles>

                            <Style Selector="ListBoxItem">
                              <Setter Property="Background" Value="Transparent" />
                              <Setter Property="BorderBrush" Value="Transparent" />
                              <Setter Property="BorderThickness" Value="0" />
                              <Setter Property="Padding" Value="0 0" />
                              <Setter Property="Template">
                                <ControlTemplate>
                                  <ContentPresenter
                                    Name="PART_ContentPresenter"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Background="Transparent"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    CornerRadius="{TemplateBinding CornerRadius}">

                                  </ContentPresenter>
                                </ControlTemplate>
                              </Setter>
                            </Style>
                          </ListBox.Styles>

                          <ListBox.ItemTemplate>
                            <DataTemplate>
                              <StackPanel>
                                <CheckBox
                                  Content="{Binding FolderName}"
                                  IsChecked="{Binding IsCheck}"
                                  IsEnabled="{Binding IsEnable}" />
                              </StackPanel>
                            </DataTemplate>
                          </ListBox.ItemTemplate>

                        </ListBox>

                        <!--TODO Добавить кнопку или чекбокс 'Все стандартные" -->

                        <CheckBox
                          Grid.Row="1" Grid.Column="0"
                          x:Name="CheckBoxFolderNameUserVersion"
                          IsChecked="{Binding FolderNameUserVersionIsCheck}"
                          IsEnabled="False"/>
                        <TextBox
                          Grid.Row="1" Grid.Column="1"
                          x:Name="TextBoxFolderNameUserVersion"
                          Text="{Binding FolderNameUserVersion}">
                          
                          <i:Interaction.Behaviors>

                            <ia:EventTriggerBehavior EventName="KeyUp">
                              <ia:InvokeCommandAction
                                Command="{Binding KeyUpFolderNameUserVersion}"
                                CommandParameter="{Binding FolderNameUserVersion}" />
                            </ia:EventTriggerBehavior>

                          </i:Interaction.Behaviors>
                          
                        </TextBox>


                      </Grid>


                    </StackPanel>
                  </Border>

                </Grid>

              </StackPanel>


            </StackPanel>

          </Grid>

        </Grid>
      </Grid>

      <!-- Панель - `Кнопок` -->
      <StackPanel
        Grid.Row="1"
        Background="Orange"
        Orientation="Horizontal"
        HorizontalAlignment="Right">

        <Button
          x:Name="ButtonCreateDirectory"
          Content="Создать каталоги"
          Command="{Binding OnClickButtonCreateDirectory}" />
        <Button x:Name="ButtonCancel" Content="Отмена"></Button>

      </StackPanel>

      <!-- Панель - `Информации` -->
      <StackPanel
        Grid.Row="2"
        Background="Gray">
        <Label x:Name="LabelInfo"
               Content="{Binding StatusInfo}" />
      </StackPanel>

    </Grid>
  </Border>
</Window>